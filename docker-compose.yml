version: '3.8'

services:
  # MongoDB Database
  mongo:
    image: mongo:6.0
    container_name: tindibandi-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-securepassword}
      MONGO_INITDB_DATABASE: tindibandi
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - tindibandi-network

  # Node.js Application
  app:
    build: .
    container_name: tindibandi-app
    restart: unless-stopped
    depends_on:
      - mongo
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3001
      HOST: 0.0.0.0
      MONGODB_URI: mongodb://admin:${MONGO_PASSWORD:-securepassword}@mongo:27017/tindibandi?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-change-this-in-production}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin123}
      SESSION_SECRET: ${SESSION_SECRET:-change-this-too}
    ports:
      - "${APP_PORT:-3001}:3001"
    volumes:
      - ./logs:/app/logs
    networks:
      - tindibandi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/menu"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: tindibandi-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # For SSL certificates
    depends_on:
      - app
    networks:
      - tindibandi-network

volumes:
  mongo_data:
    driver: local

networks:
  tindibandi-network:
    driver: bridge
